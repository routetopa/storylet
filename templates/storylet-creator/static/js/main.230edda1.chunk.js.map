{"version":3,"sources":["components/info.js","components/menu.js","components/container/header-container.js","reducer/actions/set-slide-data.js","components/slide-components/text.js","components/slide-components/image.js","style/slide.js","reducer/actions/select-component-action.js","components/slide.js","reducer/actions/select-slide-action.js","components/container/slide-container.js","components/container/stage-container.js","components/slide-components/properties/text-properties.js","components/slide-components/properties/image-properties.js","components/container/properties-container.js","components/container/body-container.js","components/moveable/moveable-component.js","StoryletCreator.js","reducer/selected-component-reducer.js","reducer/selected-slide-reducer.js","reducer/slide-data-reducer.js","reducer/index.js","index.js"],"names":["Info","className","icon","faInfoCircle","Menu","faBars","HeaderContainer","setSlideData","data","type","payload","Text","component","onClick","isEditable","selectedSlide","useSelector","state","selectedSlideReducer","dispatch","useDispatch","slidesData","useState","value","text","setText","edit","useEffect","slideIdx","index","componentIdx","cloneDeep","components","onBlur","e","target","innerText","style","top","y","left","x","width","w","height","h","transform","scale","rotate","zIndex","fontSize","color","contentEditable","suppressContentEditableWarning","Image","src","alt","SlideStyle","styled","div","props","background","cursor","componentSelected","React","memo","parameters","id","map","c","idx","key","evt","parentElement","prevProps","nextProps","slideSelected","SlideContainer","slide","selectSlide","StageContainer","TextProperties","selectedComponent","selectedComponentReducer","text_mod","modificator","slide_mod","Object","assign","setSelectedSlide","ImageProperties","initialValues","firstName","lastName","email","password","confirmPassword","validationSchema","Yup","shape","required","min","oneOf","onSubmit","fields","alert","JSON","stringify","errors","touched","status","htmlFor","name","PropertiesContainer","BodyContainer","MoveableComponent","local_position","local_size","local_scale","local_rotate","setSlide","setType","position","setPosition","size","setSize","setScale","setRotate","keepRatio","setKeepRatio","document","getElementById","children","draggable","rotatable","resizable","scalable","origin","onDragStart","onDrag","beforeDelta","onDragEnd","offsetWidth","offsetHeight","onRotateStart","onRotate","delta","onRotateEnd","onResizeStart","onResize","dist","onResizeEnd","onScaleStart","onScale","onScaleEnd","snappable","bounds","documentElement","clientWidth","bottom","clientHeight","right","verticalGuidelines","horizontalGuidelines","snapCenter","StoryletCreator","parse","window","STORY","DATA","story","action","reducers","combineReducers","store","createStore","reducer","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render"],"mappings":"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","file":"static/js/main.230edda1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nimport '../style/info.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport {faInfoCircle} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function Info()\r\n{\r\n    return (\r\n        <div className=\"info\">\r\n            <FontAwesomeIcon icon={faInfoCircle} className=\"icon\" />\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\n\r\nimport '../style/menu.css';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faBars } from '@fortawesome/free-solid-svg-icons'\r\n\r\nexport default function Menu()\r\n{\r\n    return (\r\n        <div className=\"menu\">\r\n            <FontAwesomeIcon icon={faBars} className=\"icon\" />\r\n\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\n\r\nimport Info from '../info'\r\nimport Menu from '../menu'\r\n\r\nimport '../../style/container/header-container.css';\r\n\r\nexport default function HeaderContainer()\r\n{\r\n    return (\r\n        <div className=\"header\">\r\n            <Menu />\r\n            <div className=\"logo\"> </div>\r\n            <Info />\r\n        </div>\r\n    )\r\n};","const setSlideData= (data) => {\r\n    return {\r\n        type: 'SET_SLIDE_DATA',\r\n        payload: data\r\n    };\r\n};\r\n\r\nexport default setSlideData","import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport setSlideData from '../../reducer/actions/set-slide-data'\r\n\r\nimport '../../style/slide-components/text-style.css';\r\n\r\nexport default function Text({component, onClick, isEditable})\r\n{\r\n    const selectedSlide = useSelector(state => state.selectedSlideReducer);\r\n\r\n    const dispatch = useDispatch();\r\n    const slidesData = useSelector(state => state.slidesData);\r\n\r\n    const [text, setText] = useState(component.value);\r\n    const [edit, setEdit] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        if(!selectedSlide)\r\n            return;\r\n\r\n        let slideIdx = selectedSlide.index;\r\n        let componentIdx = component.index;\r\n\r\n        let data = cloneDeep(slidesData);\r\n        data[slideIdx].components[componentIdx].value = text;\r\n        dispatch(setSlideData(data));\r\n\r\n    }, [text]);\r\n\r\n    return (\r\n        <div className=\"text-moveable-container\" onClick={onClick} onBlur={(e) => {setText(e.target.innerText);}}\r\n            style={{\r\n                top:component.y+'%',\r\n                left:component.x+'%',\r\n                width:component.w+'%',\r\n                height:component.h+'%',\r\n                transform:'scale(' + component.scale[0] + ',' + component.scale[1] + ') rotate(' + component.rotate + 'deg)',\r\n                zIndex:component.zIndex,\r\n\r\n                fontSize:0.05*(isEditable ? component.fontSize : component.fontSize/2)+'vw',\r\n                color:component.color\r\n        }} contentEditable={(isEditable && edit ? 'true' : 'false')} suppressContentEditableWarning={true}>{component.value}</div>\r\n    )\r\n};","import React from 'react'\r\n\r\nimport '../../style/slide-components/image-style.css';\r\n\r\nexport default function Image({component, onClick})\r\n{\r\n    return (\r\n        <div className=\"image-moveable-container\" onClick={onClick}\r\n        style={{\r\n            top:component.y+'%',\r\n            left:component.x+'%',\r\n            width:component.w+'%',\r\n            height:component.h+'%',\r\n            transform:'scale(' + component.scale[0] + ',' + component.scale[1] + ') rotate(' + component.rotate + 'deg)',\r\n            zIndex:component.zIndex\r\n        }}>\r\n            <img src={component.src} alt={component.src}/>\r\n        </div>\r\n    )\r\n};","import styled from 'styled-components'\r\n\r\nconst SlideStyle = styled.div`\r\nposition: absolute;\r\n  width: 80%;\r\n  padding-top: 80%;\r\n  margin: 40px auto;\r\n  position: relative;\r\n  background: url(${(props) => props.background});\r\n  background-size: cover;\r\n  background-color: var(--storylet-white);\r\n  box-shadow: 0 3px 6px rgba(0,0,0,0.16), 0 3px 6px rgba(0,0,0,0.23);\r\n  cursor: ${(props) => props.cursor};\r\n`;\r\n\r\nexport default SlideStyle","const componentSelected = (data) => {\r\n    return {\r\n        type: 'COMPONENT_SELECTED',\r\n        payload: data\r\n    };\r\n};\r\n\r\nexport default componentSelected","import React from 'react'\r\nimport {useDispatch} from 'react-redux'\r\n\r\n// Components\r\nimport Text from './slide-components/text'\r\nimport Image from './slide-components/image'\r\n\r\n// Style\r\nimport SlideStyle from '../style/slide'\r\n\r\n// Actions\r\nimport componentSelected from '../reducer/actions/select-component-action'\r\n\r\nconst shouldSlideNotRender = (prevProps, nextProps) => {\r\n    return false; //always rerender\r\n};\r\n\r\nfunction Slide({parameters, isEditable, onClick})\r\n{\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <SlideStyle id=\"selected-slide\" background={parameters.background} cursor={(isEditable ? 'auto' : 'pointer')} onClick={onClick}>\r\n            {(() => {\r\n                        if (!parameters.components) return null;\r\n                        return parameters.components.map((c, idx) => {\r\n                            switch (c.type) {\r\n                                case 'text'  :\r\n                                    return (\r\n                                        <Text key={idx} isEditable={isEditable} component={c} onClick={isEditable ? (evt) => {c.target = evt.target; dispatch(componentSelected(c))} : null} />\r\n                                    );\r\n                                case 'image' :\r\n                                    return (\r\n                                        <Image key={idx} component={c} onClick={isEditable ? (evt) => {c.target = evt.target.parentElement; dispatch(componentSelected(c))} : null}/>\r\n                                    );\r\n                                // default : break;\r\n                            }\r\n                            // return null;\r\n                        })\r\n                    }\r\n            )()}\r\n        </SlideStyle>\r\n    )\r\n}\r\n\r\nexport default React.memo(Slide, shouldSlideNotRender)\r\n\r\n","const slideSelected = (data) => {\r\n    return {\r\n        type: 'SLIDE_SELECTED',\r\n        payload: data\r\n    };\r\n};\r\n\r\nexport default slideSelected","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\n// Components\r\nimport Slide from '../slide'\r\n\r\n// Style\r\nimport '../../style/container/slide-container.css';\r\n\r\n// Actions\r\nimport selectSlide from '../../reducer/actions/select-slide-action'\r\nimport componentSelected from \"../../reducer/actions/select-component-action\";\r\n\r\nexport default function SlideContainer()\r\n{\r\n    const dispatch = useDispatch();\r\n    const slidesData = useSelector(state => state.slidesData);\r\n\r\n    return (\r\n        <div className=\"slide-container\">\r\n            {slidesData.map((slide, idx) =>\r\n                <Slide key={idx} parameters={slide} isEditable={false} onClick={() => {dispatch(componentSelected(null)); dispatch(selectSlide(slidesData[idx]))}} />\r\n            )}\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux'\r\n\r\nimport Slide from '../slide'\r\n\r\nimport '../../style/container/stage-container-style.css'\r\nimport componentSelected from \"../../reducer/actions/select-component-action\";\r\n\r\nexport default function StageContainer() {\r\n    const dispatch = useDispatch();\r\n    const selectedSlide = useSelector(state => state.selectedSlideReducer);\r\n\r\n    return (\r\n        <div id=\"stage-container\" onClick={(e) => {if(e.target.id === 'stage-container' || e.target.id === 'selected-slide') dispatch(componentSelected(null))}} >\r\n            {selectedSlide ? (<Slide parameters={selectedSlide} isEditable={true} />) : null}\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport componentSelected from '../../../reducer/actions/select-component-action'\r\nimport setSelectedSlide from '../../../reducer/actions/select-slide-action'\r\nimport setSlideData from '../../../reducer/actions/set-slide-data'\r\n\r\nexport default function TextProperties()\r\n{\r\n    const selectedComponent = useSelector(state => state.selectedComponentReducer);\r\n    const selectedSlide = useSelector(state => state.selectedSlideReducer);\r\n    const slidesData = useSelector(state => state.slidesData);\r\n    const dispatch = useDispatch();\r\n\r\n    const text_mod = (modificator) =>\r\n    {\r\n        let slide_mod = Object.assign({}, selectedSlide);\r\n        slide_mod.components[selectedComponent.key].value = `<${modificator}>${slide_mod.components[selectedComponent.key].value}</${modificator}>`;\r\n        dispatch(setSelectedSlide(slide_mod));\r\n\r\n        // REAL TIME THUMBNAIL MOD\r\n        //let slidesData_mod = JSON.parse(JSON.stringify(slidesData));\r\n        //slidesData_mod[selectedSlide.key] = slide_mod;\r\n        //dispatch(setSlidesData(slidesData_mod));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h1>Text Properties</h1>\r\n            <div>\r\n                <button onClick={() => text_mod('strong')}>Bold</button>\r\n            </div>\r\n            <div>\r\n                <button onClick={() => text_mod('i')}>Italic</button>\r\n            </div>\r\n        </>\r\n\r\n    )\r\n};","import React from 'react';\r\nimport { Formik, Field, Form, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport '../../../style/slide-components/properties/image-properties.css';\r\nimport '../../../vendor/bootstrap.min.css';\r\n\r\n// FORMIK + YUP --> https://jasonwatmore.com/post/2019/04/10/react-formik-form-validation-example\r\n\r\nconst ImageProperties = () => (\r\n    <Formik\r\n        initialValues={{\r\n            firstName: '',\r\n            lastName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmPassword: ''\r\n        }}\r\n\r\n        validationSchema={Yup.object().shape({\r\n            firstName: Yup.string()\r\n                .required('First Name is required'),\r\n            lastName: Yup.string()\r\n                .required('Last Name is required'),\r\n            email: Yup.string()\r\n                .email('Email is invalid')\r\n                .required('Email is required'),\r\n            password: Yup.string()\r\n                .min(6, 'Password must be at least 6 characters')\r\n                .required('Password is required'),\r\n            confirmPassword:  Yup.string()\r\n                .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n                .required('Confirm Password is required')\r\n        })}\r\n        // onSubmit={(values, { setSubmitting }) => {\r\n        //     setTimeout(() => {\r\n        //         alert(JSON.stringify(values, null, 2));\r\n        //         setSubmitting(false);\r\n        //     }, 4000);\r\n        // }}\r\n\r\n        onSubmit={fields => {\r\n            alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(fields, null, 4))\r\n        }}\r\n    >\r\n        {({ errors, status, touched }) => (\r\n            <Form>\r\n                <div className=\"form-group form-inline\">\r\n                    <label className=\"col-md-4 col-sm-4 _left\">Size</label>\r\n                    <label htmlFor=\"width\" className=\"col-md-2 col-sm-2\">Width:</label>\r\n                    <Field name=\"width\" type=\"number\" className={'form-control col-md-2 col-sm-2' + (errors.width && touched.width ? ' is-invalid' : '')} />\r\n                    <label htmlFor=\"height\" className=\"col-md-2 col-sm-2\">Height:</label>\r\n                    <Field name=\"height\" type=\"number\" className={'form-control col-md-2 col-sm-2' + (errors.height && touched.height ? ' is-invalid' : '')} />\r\n                    <ErrorMessage name=\"height\" component=\"div\" className=\"invalid-feedback\" />\r\n                </div>\r\n\r\n                <div className=\"form-group form-inline\">\r\n                    <label className=\"col-md-3 col-sm-3 _left\">Position</label>\r\n                    <label htmlFor=\"top\" className=\"col-md-1 col-sm-1\">X:</label>\r\n                    <Field name=\"top\" type=\"number\" className={'form-control col-md-2 col-sm-2' + (errors.top && touched.top ? ' is-invalid' : '')} />\r\n                    <label htmlFor=\"left\" className=\"col-md-1 col-sm-1\">Y:</label>\r\n                    <Field name=\"left\" type=\"number\" className={'form-control col-md-2 col-sm-2' + (errors.left && touched.left ? ' is-invalid' : '')} />\r\n                    <label htmlFor=\"zIndex\" className=\"col-md-1 col-sm-1\">Z:</label>\r\n                    <Field name=\"zIndex\" type=\"number\" className={'form-control col-md-2 col-sm-2' + (errors.zIndex && touched.zIndex ? ' is-invalid' : '')} />\r\n                    <ErrorMessage name=\"scale\" component=\"div\" className=\"invalid-feedback\" />\r\n                </div>\r\n\r\n                <div className=\"form-group form-inline\">\r\n                    <label className=\"col-md-3 col-sm-3 _left\">Scale</label>\r\n                    <label htmlFor=\"scaleX\" className=\"col-md-1 col-sm-1\">X:</label>\r\n                    <Field name=\"scaleX\" type=\"number\" className={'form-control col-md-2 col-sm-2' + (errors.scale && touched.scale ? ' is-invalid' : '')} />\r\n                    <label htmlFor=\"scaleY\" className=\"col-md-1 col-sm-1\">Y:</label>\r\n                    <Field name=\"scaleY\" type=\"number\" className={'form-control col-md-2 col-sm-2' + (errors.scale && touched.scale ? ' is-invalid' : '')} />\r\n                    <ErrorMessage name=\"scale\" component=\"div\" className=\"invalid-feedback\" />\r\n                    <div className=\"custom-control custom-checkbox col-md-3 col-sm-3\">\r\n                        <input type=\"checkbox\" className=\"custom-control-input\" id=\"defaultUnchecked\"/>\r\n                        <label className=\"custom-control-label\" htmlFor=\"defaultUnchecked\">lock</label>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"form-group form-inline\">\r\n                    <label className=\"col-md-4 col-sm-4 _left\">Rotate</label>\r\n                    <label htmlFor=\"rotate\" className=\"col-md-2 col-sm-2\">Deg.:</label>\r\n                    <Field name=\"rotate\" type=\"number\" className={'form-control col-md-2 col-sm-2' + (errors.rotate && touched.rotate ? ' is-invalid' : '')} />\r\n                    <ErrorMessage name=\"rotate\" component=\"div\" className=\"invalid-feedback\" />\r\n                </div>\r\n\r\n                {/*<div className=\"form-group\">*/}\r\n                {/*    <button type=\"submit\" className=\"btn btn-primary mr-2\">Save</button>*/}\r\n                {/*    <button type=\"reset\" className=\"btn btn-secondary\">Reset</button>*/}\r\n                {/*</div>*/}\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n);\r\n\r\nexport default ImageProperties;","import React from 'react'\r\nimport {useSelector} from 'react-redux'\r\n\r\nimport TextProperties from '../slide-components/properties/text-properties'\r\nimport ImageProperties from '../slide-components/properties/image-properties'\r\n\r\nimport '../../style/container/properties-container.css'\r\n\r\nexport default function PropertiesContainer()\r\n{\r\n    const selectedComponent = useSelector(state => state.selectedComponentReducer);\r\n\r\n    return (\r\n        <div className=\"properties-container\">\r\n            <div className=\"tabs\">\r\n                <div className=\"tab selected\">Component</div>\r\n                <div className=\"tab\">Slide</div>\r\n            </div>\r\n            <div className=\"properties col-md-12\">\r\n            {\r\n                (() =>\r\n                {\r\n                    if (!selectedComponent) return null;\r\n                    switch (selectedComponent.type) {\r\n                        case 'text'  :\r\n                            return (<TextProperties/>);\r\n                        case 'image' :\r\n                            return (<ImageProperties/>);\r\n                        default : break;\r\n                    }\r\n                    return null;\r\n                })()\r\n            }\r\n            </div>\r\n        </div>\r\n    )\r\n};","import React from 'react'\r\nimport SlideContainer from './slide-container'\r\nimport StageContainer from './stage-container'\r\nimport PropertiesContainer from './properties-container'\r\n\r\nimport '../../style/container/body-container.css'\r\n\r\nexport default function BodyContainer()\r\n{\r\n    return (\r\n        <div className=\"body-container\">\r\n\r\n            <SlideContainer />\r\n\r\n            <StageContainer />\r\n\r\n            <PropertiesContainer />\r\n\r\n        </div>\r\n    )\r\n};","import React, {useState, useEffect} from 'react';\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport Moveable from 'react-moveable';\r\n\r\nimport setSlideData from '../../reducer/actions/set-slide-data'\r\n\r\nexport default function MoveableComponent() {\r\n    const selectedSlide = useSelector(state => state.selectedSlideReducer);\r\n    const selectedComponent = useSelector(state => state.selectedComponentReducer);\r\n\r\n    const dispatch = useDispatch();\r\n    const slidesData = useSelector(state => state.slidesData);\r\n\r\n    const [slide, setSlide] = useState(null);\r\n\r\n    const [type, setType] = useState(\"text\");\r\n    const [position, setPosition] = useState([0,0]);\r\n    const [size, setSize] = useState([40,40]);\r\n    const [scale, setScale] = useState([1,1]);\r\n    const [rotate, setRotate] = useState(0);\r\n    const [keepRatio, setKeepRatio] = useState(true);\r\n\r\n    let local_position;\r\n    let local_size;\r\n    let local_scale;\r\n    let local_rotate;\r\n\r\n    useEffect(()=>{\r\n        if(!selectedComponent)\r\n            return;\r\n\r\n        setSlide(document.getElementById(\"stage-container\").children[0]);\r\n\r\n        setType(selectedComponent.type);\r\n        setPosition([selectedComponent.x,selectedComponent.y]);\r\n        setSize([selectedComponent.w,selectedComponent.h]);\r\n        setScale(selectedComponent.scale);\r\n        setRotate(selectedComponent.rotate);\r\n        setKeepRatio(selectedComponent.keepRatio);\r\n    }, [selectedComponent]);\r\n\r\n    useEffect(()=>{\r\n        if(!selectedSlide || !selectedComponent)\r\n            return;\r\n\r\n        let slideIdx = selectedSlide.index;\r\n        let componentIdx = selectedComponent.index;\r\n\r\n        let data = cloneDeep(slidesData);\r\n        data[slideIdx].components[componentIdx].x = position[0];\r\n        data[slideIdx].components[componentIdx].y = position[1];\r\n        data[slideIdx].components[componentIdx].w = size[0];\r\n        data[slideIdx].components[componentIdx].h = size[1];\r\n        data[slideIdx].components[componentIdx].scale = scale;\r\n        data[slideIdx].components[componentIdx].rotate = rotate;\r\n        dispatch(setSlideData(data));\r\n\r\n    }, [position, size, scale, rotate]);\r\n\r\n    return (\r\n            <Moveable\r\n                target={selectedComponent ? selectedComponent.target : null}\r\n\r\n                draggable={true}\r\n                rotatable={true}\r\n                // resizable={type==='image'}\r\n                // scalable={type==='text'}\r\n                resizable={false}\r\n                scalable={true}\r\n\r\n                origin={false}\r\n\r\n                keepRatio={keepRatio}\r\n\r\n                // Drag\r\n                onDragStart={(target, left, top) => {\r\n                    local_position = [left, top];\r\n                }}\r\n                onDrag={({target, left, top, beforeDelta}) => {\r\n                    local_position = [left, top];\r\n                    target.style.left = local_position[0] + \"px\";\r\n                    target.style.top = local_position[1] + \"px\";\r\n                }}\r\n                onDragEnd={() => {\r\n                    let x = local_position[0]/slide.offsetWidth*100;\r\n                    let y = local_position[1]/slide.offsetHeight*100;\r\n                    setPosition([x,y]);\r\n                    selectedComponent.x = x;\r\n                    selectedComponent.y = y;\r\n                }}\r\n\r\n                // Rotate\r\n                onRotateStart={() => {\r\n                    local_rotate = rotate;\r\n                }}\r\n                onRotate={({ target, beforeDelta, delta }) => {\r\n                    local_rotate += delta;\r\n                    target.style.transform\r\n                        = \"scale(\" + scale[0] +  \",\" + scale[1] + \") \"\r\n                        + \"rotate(\" + local_rotate +  \"deg)\";\r\n                }}\r\n                onRotateEnd={() => {\r\n                    setRotate(local_rotate);\r\n                    selectedComponent.rotate = local_rotate;\r\n                }}\r\n\r\n                // Resize\r\n                onResizeStart={(target, width, height) => {\r\n                    local_size = [width, height];\r\n                }}\r\n                onResize={({target, width, height, dist}) => {\r\n                    local_size = [width, height];\r\n                    target.style.width = local_size[0] + \"px\";\r\n                    target.style.height = local_size[1] + \"px\";\r\n                }}\r\n                onResizeEnd={() => {\r\n                    let w = local_size[0]/slide.offsetWidth*100;\r\n                    let h = local_size[1]/slide.offsetHeight*100;\r\n                    setSize([w,h]);\r\n                    selectedComponent.w = w;\r\n                    selectedComponent.h = h;\r\n                }}\r\n\r\n                // Scale\r\n                onScaleStart={() => {\r\n                    local_scale = scale;\r\n                }}\r\n                onScale={({target, delta}) => {\r\n                    local_scale[0] *= delta[0];\r\n                    local_scale[1] *= delta[1];\r\n                    target.style.transform\r\n                        = \"scale(\" + local_scale[0] +  \",\" + local_scale[1] + \") \"\r\n                        + \"rotate(\" + rotate +  \"deg)\";\r\n                }}\r\n                onScaleEnd={() => {\r\n                    setScale(cloneDeep(local_scale));\r\n                    selectedComponent.scale = local_scale;\r\n                }}\r\n\r\n                // Snappable\r\n                snappable={true}\r\n                bounds={{ left: document.documentElement.clientWidth*0.25, top: 56, bottom: document.documentElement.clientHeight-8, right: document.documentElement.clientWidth*0.75 }}\r\n                verticalGuidelines={[slide ? document.documentElement.clientWidth*0.50-slide.offsetWidth/2 : null, document.documentElement.clientWidth*0.50, slide ? document.documentElement.clientWidth*0.50+slide.offsetWidth/2 : null]}\r\n                horizontalGuidelines={[96, slide ? 96+slide.offsetHeight/2 : null, slide ? 96+slide.offsetHeight : null]}\r\n                snapCenter={true}\r\n                // elementGuidelines={[document.querySelector(\"#stage-container .image-moveable-container\")]}\r\n            />\r\n    )\r\n}","import React, {useEffect} from 'react';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nimport HeaderContainer from './components/container/header-container'\r\nimport BodyContainer from './components/container/body-container'\r\nimport MoveableComponent from \"./components/moveable/moveable-component\";\r\n\r\nimport setSlideData from './reducer/actions/set-slide-data'\r\n\r\nimport './StoryletCreator.css';\r\n\r\nfunction StoryletCreator()\r\n{\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(setSlideData(JSON.parse(window.STORY.DATA.story)));\r\n    }, []);\r\n\r\n    return (\r\n     <>\r\n        <HeaderContainer />\r\n        <BodyContainer />\r\n        <MoveableComponent/>\r\n     </>\r\n    );\r\n}\r\n\r\nexport default StoryletCreator;","const selectedComponent = (state = null, action) => {\r\n    switch (action.type){\r\n        case 'COMPONENT_SELECTED' :  return action.payload;\r\n        default                   :  return state;\r\n    }\r\n\r\n};\r\n\r\nexport default selectedComponent\r\n","const selectedSlide = (state = null, action) => {\r\n    switch (action.type){\r\n          case 'SLIDE_SELECTED' :  return action.payload;\r\n          default               :  return state;\r\n    }\r\n\r\n};\r\n\r\nexport default selectedSlide\r\n","const slidesData = (state = [], action) => {\r\n    switch (action.type){\r\n        case 'SET_SLIDE_DATA' :  return action.payload;\r\n        default         :  return state;\r\n    }\r\n\r\n};\r\n\r\nexport default slidesData\r\n","import selectedComponentReducer from './selected-component-reducer';\r\nimport selectedSlideReducer from './selected-slide-reducer'\r\nimport slidesData from './slide-data-reducer'\r\nimport {combineReducers} from 'redux'\r\n\r\nconst reducers = combineReducers({\r\n    selectedComponentReducer: selectedComponentReducer,\r\n    selectedSlideReducer: selectedSlideReducer,\r\n    slidesData:slidesData\r\n});\r\n\r\nexport default reducers","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport StoryletCreator from './StoryletCreator';\r\n\r\nimport {createStore} from 'redux'\r\nimport {Provider} from 'react-redux'\r\nimport reducer from './reducer'\r\n\r\nconst store = createStore (reducer, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(<Provider store={store}><StoryletCreator /></Provider>, document.getElementById('root'));"],"sourceRoot":""}