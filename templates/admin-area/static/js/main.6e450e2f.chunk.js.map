{"version":3,"sources":["form/add-class-form.js","form/edit-student-form.js","component/teacher-class.js","component/stories.js","App.js","serviceWorker.js","index.js"],"names":["Form","create","name","form","handle_submit","getFieldDecorator","layout","className","onSubmit","e","preventDefault","validateFields","err","values","Item","label","rules","required","message","placeholder","min","type","htmlType","EditStudent","React","memo","data","initialValue","username","password","surname","TeacherClass","student_columns","title","dataIndex","key","render","text","record","index","theme","style","fontSize","cursor","marginRight","onClick","showStudentDetail","onConfirm","deleteStudent","stories_columns","JSON","parse","metadata","description","res","selectedClass","students","find","userId","ownerId","window","open","API_ENDPOINT","STORYLET_VIEWER","id","togglePublishStorylet","parseInt","status","deleteStorylet","useState","setSelectedClass","classes","setClasses","selectedStudent","setSelectedStudent","addClassModalVisible","setAddClassModalVisible","studentDetailModalVisible","setStudentDetailModalVisible","a","console","log","axios","put","CRUD_STORYLET","headers","API_NONCE","NONCE","fetch_data","selected_calss","Object","assign","idx","delete","CRUD_STUDENT","add_class_form_submit","post","CRUD_CLASS","class","section","size","student_number","edit_user_submit","response","notification","error","delete_class","class_id","useEffect","get","GET_CLASS","reload_story","cl","map","c","select_class","tabPosition","animated","TabPane","tab","backgroundColor","padding","dataSource","rowKey","columns","stories","loading","position","bottom","right","visible","onCancel","okButtonProps","display","cancelButtonProps","Stories","setData","setStudents","forEach","st","push","Content","Layout","Footer","Sider","App","collapsed","setCollapsed","basename","SITE_URL","minHeight","collapsible","onCollapse","width","textAlign","color","marginBottom","USER_INFO","icon","defaultSelectedKeys","mode","to","margin","exact","path","component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6e450e2f.chunk.js","sourcesContent":["import Form from \"antd/es/form\";\r\nimport {Input, Button, InputNumber} from \"antd\";\r\nimport React from \"react\";\r\n\r\nfunction AddClass ({form, handle_submit}) {\r\n\r\n    const { getFieldDecorator } = form;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        form.validateFields((err, values) => {\r\n            if(!err)\r\n                handle_submit(values);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            layout=\"vertical\"\r\n            className=\"zform ant-advanced-search-form\"\r\n            onSubmit={handleSubmit}>\r\n\r\n            <Form.Item label={'Classe'}>\r\n                {getFieldDecorator('class', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Sezione'}>\r\n                {getFieldDecorator('section', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Descrizione'}>\r\n                {getFieldDecorator('description', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Numero di studenti'}>\r\n                {getFieldDecorator('student_number', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<InputNumber placeholder=\"1\" min={1} />)}\r\n            </Form.Item>\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n\r\n}\r\n\r\nexport default Form.create({name:'AddClass'})(AddClass);\r\n","import Form from \"antd/es/form\";\r\nimport {Input, Button} from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst EditStudent = React.memo( ({form, handle_submit, data}) =>\r\n{\r\n    const { getFieldDecorator } = form;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        form.validateFields((err, values) => {\r\n            if(!err)\r\n                handle_submit(values);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            layout=\"vertical\"\r\n            className=\"zform ant-advanced-search-form\"\r\n            onSubmit={handleSubmit}>\r\n\r\n            <Form.Item label={'Username'}>\r\n                {getFieldDecorator('username', {\r\n                    initialValue : data.username,\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Password'}>\r\n                {getFieldDecorator('password', {\r\n                    initialValue : data.password,\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Nome'}>\r\n                {getFieldDecorator('name', {\r\n                    initialValue : data.name\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Cognome'}>\r\n                {getFieldDecorator('surname', {\r\n                    initialValue : data.surname\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n});\r\n\r\nexport default Form.create({name:'EditStudent'})(EditStudent);\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Icon, Tabs, Table, Modal, Popconfirm, notification, Button } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport AddClassForm from '../form/add-class-form';\r\nimport EditStudentForm from '../form/edit-student-form';\r\n\r\nimport '../css/teacher-class.css'\r\n\r\nexport default function TeacherClass()\r\n{\r\n    const student_columns = [\r\n        {title: 'Username', dataIndex: 'username', key: 'username'},\r\n        {title: 'Password', dataIndex: 'password', key: 'password'},\r\n        {title: 'Nome',     dataIndex: 'name',     key: 'name'},\r\n        {title: 'Cognome',  dataIndex: 'surname',  key: 'surname'},\r\n        {title: 'Azioni',   key: 'action',\r\n            render: (text, record, index) =>\r\n            {\r\n                return (\r\n                    <div>\r\n                        <Icon theme=\"filled\"\r\n                              style={{fontSize:'24px', cursor:'pointer', marginRight:'24px'}}\r\n                              type=\"edit\"\r\n                              onClick={() => showStudentDetail(record)}\r\n                        />\r\n                        <Popconfirm title=\"Sure to ?\" onConfirm={() => deleteStudent(record)}>\r\n                            <Icon theme=\"filled\"\r\n                                  style={{fontSize:'24px', cursor:'pointer'}}\r\n                                  type=\"delete\"\r\n                            />\r\n                        </Popconfirm>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n    const stories_columns = [\r\n        {title: 'Titolo', key: 'name',\r\n            render: (text, record, index) => {\r\n                let metadata = JSON.parse(record.metadata);\r\n                return metadata.name\r\n            }\r\n        },\r\n        {title: 'Descrizione', key: 'description',\r\n            render: (text, record, index) => {\r\n                let metadata = JSON.parse(record.metadata);\r\n                return metadata.description\r\n            }},\r\n        {title: 'Username', key: 'ownerId',\r\n            render: (text, record, index) =>\r\n            {\r\n                let res = selectedClass.students.find(\r\n                    (e) => (e.userId === record.ownerId)\r\n                );\r\n                return `${res.name} ${res.surname} (${res.username})`;\r\n            }\r\n        },\r\n        {title: 'Action',   key: 'action',\r\n            render: (text, record, index) =>\r\n            {\r\n                return (\r\n                    <div>\r\n                        <Icon theme=\"filled\"\r\n                              style={{fontSize:'24px', cursor:'pointer', marginRight:'24px'}}\r\n                              type=\"play-circle\"\r\n                              onClick={() => window.open(`${window.API_ENDPOINT.STORYLET_VIEWER}/${record.id}`,'_blank')}\r\n                        />\r\n                        <a onClick={() => togglePublishStorylet(record)}> {parseInt(record.status) === 1 ? 'Rendi pubblica' : 'Rendi privata'}</a> |\r\n                        <Popconfirm title=\"Sure to ?\" onConfirm={() => deleteStorylet(record)}>\r\n                            <Icon theme=\"filled\"\r\n                                  style={{fontSize:'24px', cursor:'pointer'}}\r\n                                  type=\"delete\"\r\n                            />\r\n                        </Popconfirm>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [selectedClass, setSelectedClass] = useState(null);\r\n    const [classes, setClasses] = useState(null);\r\n\r\n    const [selectedStudent, setSelectedStudent] = useState(null);\r\n\r\n    const [addClassModalVisible, setAddClassModalVisible] = useState(false);\r\n    const [studentDetailModalVisible, setStudentDetailModalVisible] = useState(false);\r\n\r\n    const togglePublishStorylet = async (data) =>\r\n    {\r\n        console.log(data);\r\n        let response = await axios.put(`${window.API_ENDPOINT.CRUD_STORYLET}/${data.id}`,\r\n            {\r\n                status : (parseInt(data.status) === 1 ? 0 : 1)\r\n            },\r\n            { headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } });\r\n        if(response.data.status === 'OK')\r\n        {\r\n            let data = await fetch_data();\r\n            let selected_calss = Object.assign({}, data[selectedClass.idx]);\r\n            selected_calss.idx = selectedClass.idx;\r\n            setSelectedClass(selected_calss);\r\n        }\r\n    };\r\n\r\n    const deleteStorylet = async (data) =>\r\n    {\r\n        console.log(data);\r\n        let response = await axios.delete(`${window.API_ENDPOINT.CRUD_STORYLET}/${data.id}`,\r\n            { headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } });\r\n        if(response.data.status === 'OK')\r\n        {\r\n            fetch_data();\r\n        }\r\n    };\r\n\r\n    const select_class = (idx) => {\r\n        classes[idx].idx = idx;\r\n        setSelectedClass(Object.assign({}, classes[idx]));\r\n    };\r\n\r\n    const showStudentDetail = (data) => {\r\n        console.log('show student detail');\r\n        console.log(data);\r\n        setSelectedStudent(Object.assign({}, data));\r\n        setStudentDetailModalVisible(true);\r\n    };\r\n\r\n    const deleteStudent = async (data) => {\r\n        console.log(data);\r\n        let response = await axios.delete(`${window.API_ENDPOINT.CRUD_STUDENT}/${data.id}`,\r\n            { headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } });\r\n        if(response.data.status === 'OK')\r\n        {\r\n            fetch_data();\r\n        }\r\n    };\r\n\r\n    const add_class_form_submit = async (data) => {\r\n        console.log(data);\r\n        let response = await axios.post(window.API_ENDPOINT.CRUD_CLASS,\r\n            {\r\n                class       : data.class,\r\n                section     : data.section,\r\n                description : data.description,\r\n                size        : data.student_number,\r\n            },\r\n            { headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } });\r\n        if(response.data.status === 'OK')\r\n        {\r\n            setAddClassModalVisible(false);\r\n            fetch_data();\r\n        }\r\n    };\r\n\r\n    const edit_user_submit = async (data) => {\r\n        console.log(data);\r\n        let response = await axios.put(`${window.API_ENDPOINT.CRUD_STUDENT}/${selectedStudent.id}`,\r\n            {\r\n                username : data.username,\r\n                password : data.password,\r\n                name     : data.name,\r\n                surname  : data.surname,\r\n            },\r\n            { headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } });\r\n        if(response.data.status === 'OK')\r\n        {\r\n\r\n            let data = await fetch_data();\r\n            let selected_calss = Object.assign({}, data[selectedClass.idx]);\r\n            selected_calss.idx = selectedClass.idx;\r\n            setSelectedClass(selected_calss);\r\n        } else {\r\n            notification.open({\r\n                message: 'Errore',\r\n                description: response.data.error\r\n            });\r\n        }\r\n\r\n        setStudentDetailModalVisible(false);\r\n        setSelectedStudent(null);\r\n    };\r\n\r\n    const delete_class = async (class_id) => {\r\n        console.log(class_id);\r\n        let response = await axios.delete(`${window.API_ENDPOINT.CRUD_CLASS}/${class_id}`,\r\n            { headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } });\r\n        if(response.data.status === 'OK')\r\n        {\r\n            console.log('deleted');\r\n        }\r\n    };\r\n\r\n    useEffect(() =>\r\n    {\r\n        fetch_data();\r\n    }, []);\r\n\r\n    const fetch_data = async () => {\r\n        let response = await axios.get(window.API_ENDPOINT.GET_CLASS,\r\n            { headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } });\r\n        setClasses(response.data.data);\r\n        return response.data.data;\r\n    };\r\n\r\n    const reload_story = async () => {\r\n        let cl = await fetch_data();\r\n        cl[selectedClass.idx].idx = selectedClass.idx;\r\n        setSelectedClass(Object.assign({}, cl[selectedClass.idx]));\r\n    };\r\n\r\n    /*const ideas = [\r\n        {key: '1', title: 'Una slide iniziale', description: 'Obiettivo 7'},\r\n        {key: '2', title: 'Una slide iniziale e una finale', description: 'Obiettivo 4'},\r\n        {key: '3', title: 'Una slide al centro', description: 'Obiettivo 4'},\r\n        {key: '4', title: 'Tema libero', description: 'Obiettivo 1'},\r\n    ];\r\n\r\n    const ideas_columns = [\r\n        {title: 'Titolo', dataIndex: 'title', key: 'title'},\r\n        {title: 'Descrizione', dataIndex: 'description', key: 'description'},\r\n    ];*/\r\n\r\n    return (\r\n        <>\r\n            <h1>Le tue classi</h1>\r\n\r\n            <div className='class-container'>\r\n                {classes && classes.map((c, idx) => {\r\n                    return (\r\n                        <div onClick={(e) => select_class(idx)} key={`class_${idx}`} className='class'>\r\n                            {c.class} {c.section} - {c.description}\r\n\r\n                            <Popconfirm title=\"Sure to ?\" onConfirm={(e) => delete_class(c.id)}>\r\n                                <Icon theme=\"filled\"\r\n                                      style={{fontSize:'24px', cursor:'pointer'}}\r\n                                      type=\"delete\"\r\n                                />\r\n                            </Popconfirm>\r\n\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            {selectedClass ? (\r\n                <div className='class-detail'>\r\n                    <Tabs tabPosition='top' animated={false}>\r\n\r\n                        <Tabs.TabPane tab={<span><Icon type=\"team\" />Studenti</span>} key=\"1\">\r\n                            <Table style={{backgroundColor:'#ffffff', padding: '16px'}}\r\n                                   dataSource={selectedClass.students}\r\n                                   rowKey='id'\r\n                                   columns={student_columns}\r\n                            />\r\n                        </Tabs.TabPane>\r\n\r\n                        <Tabs.TabPane tab={<span><Icon type=\"highlight\" />Storie</span>} key=\"2\">\r\n                            <Table style={{backgroundColor:'#ffffff', padding: '16px'}}\r\n                                   dataSource={selectedClass.stories}\r\n                                   rowKey='id'\r\n                                   columns={stories_columns}\r\n                            />\r\n\r\n                            <Button type=\"primary\" onClick={reload_story} loading={false}>\r\n                                Reload\r\n                            </Button>\r\n\r\n                        </Tabs.TabPane>\r\n\r\n                        {/*\r\n                            <Tabs.TabPane tab={<span><Icon type=\"bulb\"/>Idee</span>} key=\"3\">\r\n                                <Table style={{backgroundColor: '#ffffff', padding: '16px'}}\r\n                                       dataSource={ideas}\r\n                                       columns={ideas_columns}\r\n                                />\r\n                            </Tabs.TabPane>\r\n                        */}\r\n\r\n\r\n                    </Tabs>\r\n                </div> ) : null }\r\n\r\n            <Icon theme=\"filled\"\r\n                  style={{fontSize:'64px', position:'absolute', bottom:'20px', right:'64px', cursor: 'pointer'}}\r\n                  type=\"plus-circle\"\r\n                  onClick={() => setAddClassModalVisible(true)}\r\n            />\r\n\r\n            <Modal\r\n                title=\"Aggiungi classe\"\r\n                visible={addClassModalVisible}\r\n                onCancel={() => setAddClassModalVisible(false)}\r\n                okButtonProps={{ style: { display: 'none' } }}\r\n                cancelButtonProps={{ style: { display: 'none' } }}\r\n            >\r\n                <AddClassForm handle_submit={add_class_form_submit} />\r\n            </Modal>\r\n\r\n            <Modal\r\n                title=\"Info Studente\"\r\n                visible={studentDetailModalVisible}\r\n                onCancel={() => setStudentDetailModalVisible(false)}\r\n                okButtonProps={{ style: { display: 'none' } }}\r\n                cancelButtonProps={{ style: { display: 'none' } }}\r\n            >\r\n                {selectedStudent ? (<EditStudentForm handle_submit={edit_user_submit} data={selectedStudent} />) : null}\r\n            </Modal>\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { Table } from 'antd';\r\nimport axios from \"axios\";\r\n\r\nexport default function Stories()\r\n{\r\n    const [data, setData] = useState(null);\r\n    const [students, setStudents] = useState(null);\r\n\r\n    useEffect(() =>\r\n    {\r\n        fetch_data();\r\n    }, []);\r\n\r\n    const fetch_data = async () => {\r\n        let response = await axios.get(window.API_ENDPOINT.GET_CLASS,\r\n            { headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } });\r\n        let data = [];\r\n        let students = []\r\n\r\n        response.data.data.forEach((cl) => {\r\n            students = [...students, ...cl.students];\r\n            cl.stories.forEach((st) => {\r\n                if(parseInt(st.status) === 1)\r\n                    data.push(st)\r\n            })\r\n        });\r\n\r\n        setStudents(students);\r\n        setData(data);\r\n    };\r\n\r\n    const stories_columns = [\r\n        {title: 'Titolo', dataIndex: 'name', key: 'name'},\r\n        {title: 'Descrizione', dataIndex: 'description', key: 'description'},\r\n        {title: 'Username', key: 'ownerId',\r\n            render: (text, record, index) =>\r\n            {\r\n                let res = students.find(\r\n                    (e) => (e.userId === record.ownerId)\r\n                );\r\n                return `${res.name} ${res.surname} (${res.username})`;\r\n            }\r\n        }\r\n    ];\r\n\r\n    return(\r\n        <>\r\n            <h1>Storie pubblicate</h1>\r\n            <Table style={{backgroundColor:'#ffffff', padding: '16px'}}\r\n                   dataSource={data}\r\n                   columns={stories_columns}\r\n                   rowKey='id'\r\n            />\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Menu, Icon, Avatar } from 'antd';\nimport TeacherClass from './component/teacher-class';\nimport Stories from './component/stories';\n\nconst { Content, Footer, Sider } = Layout;\n\nfunction App()\n{\n    const [collapsed, setCollapsed] = useState(false);\n\n    const onCollapse = collapsed => {\n        setCollapsed( collapsed );\n    };\n\n  return (\n      <>\n          <Router basename={`${window.API_ENDPOINT.SITE_URL}admin-area/`}>\n              <Layout style={{ minHeight: '100vh' }}>\n\n                  <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n\n                      <div style={{ width:'100%', textAlign: 'center', 'padding': '16px' }}>\n                          <div style={{color:'#ffffff', marginBottom: '8px'}}>Ciao {`${window.USER_INFO.name} ${window.USER_INFO.surname}`}</div>\n                          <Avatar size={64} icon=\"user\" />\n                      </div>\n\n                      <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                          <Menu.Item key=\"1\">\n                              <Icon type=\"team\" />\n                              <span>Classi</span>\n                              <Link to=\"/\" />\n                          </Menu.Item>\n                          <Menu.Item key=\"2\">\n                              <Icon type=\"highlight\" />\n                              <span>Storie pubblicate</span>\n                              <Link to=\"/stories\" />\n                          </Menu.Item>\n                      </Menu>\n                  </Sider>\n\n                  <Layout>\n                      <Content style={{ margin: '16px' }}>\n\n                          <Route exact path=\"/\" component={TeacherClass} />\n                          <Route       path=\"/stories\" component={Stories} />\n\n                      </Content>\n                      <Footer style={{ textAlign: 'center' }}>Storylet Admin by ISISLab</Footer>\n                  </Layout>\n\n              </Layout>\n          </Router>\n      </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}