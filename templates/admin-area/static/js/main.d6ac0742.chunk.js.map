{"version":3,"sources":["form/add-class-form.js","form/edit-student-form.js","component/teacher-class.js","component/stories.js","App.js","serviceWorker.js","index.js"],"names":["Form","create","name","form","handle_submit","getFieldDecorator","layout","className","onSubmit","e","preventDefault","validateFields","err","values","Item","label","rules","required","message","placeholder","min","type","htmlType","EditStudent","React","memo","data","initialValue","username","password","surname","TeacherClass","student_columns","title","dataIndex","key","render","text","record","index","onConfirm","showStudentDetail","deleteStudent","stories_columns","res","selectedClass","students","find","userId","ownerId","onClick","window","open","API_ENDPOINT","STORYLET_VIEWER","id","togglePublishStorylet","parseInt","status","deleteStorylet","useState","setSelectedClass","classes","setClasses","selectedStudent","setSelectedStudent","addClassModalVisible","setAddClassModalVisible","studentDetailModalVisible","setStudentDetailModalVisible","a","console","log","axios","put","CRUD_STORYLET","fetch_data","selected_calss","Object","assign","idx","delete","CRUD_STUDENT","add_class_form_submit","post","CRUD_CLASS","class","section","description","size","student_number","edit_user_submit","delete_class","class_id","useEffect","get","GET_CLASS","response","map","c","select_class","tabPosition","animated","TabPane","tab","style","backgroundColor","padding","dataSource","rowKey","columns","stories","theme","fontSize","position","bottom","right","cursor","visible","onCancel","okButtonProps","display","cancelButtonProps","Stories","setData","setStudents","forEach","cl","st","push","Content","Layout","Footer","Sider","App","collapsed","setCollapsed","basename","SITE_URL","minHeight","collapsible","onCollapse","width","textAlign","color","marginBottom","icon","defaultSelectedKeys","mode","to","margin","exact","path","component","Boolean","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d6ac0742.chunk.js","sourcesContent":["import Form from \"antd/es/form\";\r\nimport {Input, Button, InputNumber} from \"antd\";\r\nimport React from \"react\";\r\n\r\nfunction AddClass ({form, handle_submit}) {\r\n\r\n    const { getFieldDecorator } = form;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        form.validateFields((err, values) => {\r\n            if(!err)\r\n                handle_submit(values);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            layout=\"vertical\"\r\n            className=\"zform ant-advanced-search-form\"\r\n            onSubmit={handleSubmit}>\r\n\r\n            <Form.Item label={'Classe'}>\r\n                {getFieldDecorator('class', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Sezione'}>\r\n                {getFieldDecorator('section', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Descrizione'}>\r\n                {getFieldDecorator('description', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Numero di studenti'}>\r\n                {getFieldDecorator('student_number', {\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<InputNumber placeholder=\"1\" min={1} />)}\r\n            </Form.Item>\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n\r\n}\r\n\r\nexport default Form.create({name:'AddClass'})(AddClass);\r\n","import Form from \"antd/es/form\";\r\nimport {Input, Button} from \"antd\";\r\nimport React from \"react\";\r\n\r\nconst EditStudent = React.memo( ({form, handle_submit, data}) =>\r\n{\r\n    const { getFieldDecorator } = form;\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        form.validateFields((err, values) => {\r\n            if(!err)\r\n                handle_submit(values);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Form\r\n            layout=\"vertical\"\r\n            className=\"zform ant-advanced-search-form\"\r\n            onSubmit={handleSubmit}>\r\n\r\n            <Form.Item label={'Username'}>\r\n                {getFieldDecorator('username', {\r\n                    initialValue : data.username,\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Password'}>\r\n                {getFieldDecorator('password', {\r\n                    initialValue : data.password,\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Nome'}>\r\n                {getFieldDecorator('name', {\r\n                    initialValue : data.name,\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Form.Item label={'Cognome'}>\r\n                {getFieldDecorator('surname', {\r\n                    initialValue : data.surname,\r\n                    rules: [\r\n                        {\r\n                            required: true,\r\n                            message: 'Campo obbligatorio',\r\n                        },\r\n                    ],\r\n                })(<Input placeholder=\"placeholder\" />)}\r\n            </Form.Item>\r\n\r\n            <Button type=\"primary\" htmlType=\"submit\">\r\n                Submit\r\n            </Button>\r\n        </Form>\r\n    );\r\n});\r\n\r\nexport default Form.create({name:'EditStudent'})(EditStudent);\r\n","import React, {useState, useEffect} from 'react';\r\nimport { Icon, Tabs, Table, Modal, Popconfirm } from 'antd';\r\nimport axios from 'axios';\r\n\r\nimport AddClassForm from '../form/add-class-form';\r\nimport EditStudentForm from '../form/edit-student-form';\r\n\r\nimport '../css/teacher-class.css'\r\n\r\nexport default function TeacherClass()\r\n{\r\n    const student_columns = [\r\n        {title: 'Username', dataIndex: 'username', key: 'username'},\r\n        {title: 'Password', dataIndex: 'password', key: 'password'},\r\n        {title: 'Nome',     dataIndex: 'name',     key: 'name'},\r\n        {title: 'Cognome',  dataIndex: 'surname',  key: 'surname'},\r\n        {title: 'Action',   key: 'action',\r\n            render: (text, record, index) =>\r\n            {\r\n                return (\r\n                    <div>\r\n                        <Popconfirm title=\"Sure to ?\" onConfirm={() => showStudentDetail(record)}>\r\n                            <a>Edit </a>\r\n                        </Popconfirm>\r\n                         |\r\n                        <Popconfirm title=\"Sure to ?\" onConfirm={() => deleteStudent(record)}>\r\n                            <a> Delete</a>\r\n                        </Popconfirm>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n    const stories_columns = [\r\n        {title: 'Titolo', dataIndex: 'name', key: 'name'},\r\n        {title: 'Descrizione', dataIndex: 'description', key: 'description'},\r\n        {title: 'Username', key: 'ownerId',\r\n            render: (text, record, index) =>\r\n            {\r\n                let res = selectedClass.students.find(\r\n                    (e) => (e.userId === record.ownerId)\r\n                );\r\n                return `${res.name} ${res.surname} (${res.username})`;\r\n            }\r\n        },\r\n        {title: 'Action',   key: 'action',\r\n            render: (text, record, index) =>\r\n            {\r\n                return (\r\n                    <div>\r\n                        <a onClick={() => window.open(`${window.API_ENDPOINT.STORYLET_VIEWER}/${record.id}`,'_blank')}>View</a> |\r\n                        <a onClick={() => togglePublishStorylet(record)}> {parseInt(record.status) === 1 ? 'Unpublish' : 'Publish'}</a> |\r\n                        <Popconfirm title=\"Sure to ?\" onConfirm={() => deleteStorylet(record)}>\r\n                            <a> Delete</a>\r\n                        </Popconfirm>\r\n                    </div>\r\n                )\r\n            }\r\n        }\r\n    ];\r\n\r\n    const [selectedClass, setSelectedClass] = useState(null);\r\n    const [classes, setClasses] = useState(null);\r\n\r\n    const [selectedStudent, setSelectedStudent] = useState(null);\r\n\r\n    const [addClassModalVisible, setAddClassModalVisible] = useState(false);\r\n    const [studentDetailModalVisible, setStudentDetailModalVisible] = useState(false);\r\n\r\n    const togglePublishStorylet = async (data) =>\r\n    {\r\n        console.log(data);\r\n        let response = await axios.put(`${window.API_ENDPOINT.CRUD_STORYLET}/${data.id}`,\r\n            {\r\n                status : (parseInt(data.status) === 1 ? 0 : 1)\r\n            }\r\n            /*{ headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } }*/);\r\n        if(response.data.status === 'OK')\r\n        {\r\n            let data = await fetch_data();\r\n            let selected_calss = Object.assign({}, data[selectedClass.idx]);\r\n            selected_calss.idx = selectedClass.idx;\r\n            setSelectedClass(selected_calss);\r\n        }\r\n    };\r\n\r\n    const deleteStorylet = async (data) =>\r\n    {\r\n        console.log(data);\r\n        let response = await axios.delete(`${window.API_ENDPOINT.CRUD_STORYLET}/${data.id}`,\r\n            /*{ headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } }*/);\r\n        if(response.data.status === 'OK')\r\n        {\r\n            fetch_data();\r\n        }\r\n    };\r\n\r\n    const select_class = (idx) => {\r\n        classes[idx].idx = idx;\r\n        setSelectedClass(Object.assign({}, classes[idx]));\r\n    };\r\n\r\n    const showStudentDetail = (data) => {\r\n        console.log('show student detail');\r\n        console.log(data);\r\n        setSelectedStudent(Object.assign({}, data));\r\n        setStudentDetailModalVisible(true);\r\n    };\r\n\r\n    const deleteStudent = async (data) => {\r\n        console.log(data);\r\n        let response = await axios.delete(`${window.API_ENDPOINT.CRUD_STUDENT}/${data.id}`,\r\n            /*{ headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } }*/);\r\n        if(response.data.status === 'OK')\r\n        {\r\n            fetch_data();\r\n        }\r\n    };\r\n\r\n    const add_class_form_submit = async (data) => {\r\n        console.log(data);\r\n        let response = await axios.post(window.API_ENDPOINT.CRUD_CLASS,\r\n            {\r\n                class       : data.class,\r\n                section     : data.section,\r\n                description : data.description,\r\n                size        : data.student_number,\r\n            }\r\n            /*{ headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } }*/);\r\n        if(response.data.status === 'OK')\r\n        {\r\n            setAddClassModalVisible(false);\r\n            fetch_data();\r\n        }\r\n    };\r\n\r\n    const edit_user_submit = async (data) => {\r\n        console.log(data);\r\n        let response = await axios.put(`${window.API_ENDPOINT.CRUD_STUDENT}/${selectedStudent.id}`,\r\n            {\r\n                username : data.username,\r\n                password : data.password,\r\n                name     : data.name,\r\n                surname  : data.surname,\r\n            }\r\n            /*{ headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } }*/);\r\n        if(response.data.status === 'OK')\r\n        {\r\n            setStudentDetailModalVisible(false);\r\n            let data = await fetch_data();\r\n            let selected_calss = Object.assign({}, data[selectedClass.idx]);\r\n            selected_calss.idx = selectedClass.idx\r\n            setSelectedClass(selected_calss);\r\n            setSelectedStudent(null);\r\n        }\r\n    };\r\n\r\n    const delete_class = async (class_id) => {\r\n        console.log(class_id);\r\n        let response = await axios.delete(`${window.API_ENDPOINT.CRUD_CLASS}/${class_id}`,\r\n            /*{ headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } }*/);\r\n        if(response.data.status === 'OK')\r\n        {\r\n            console.log('deleted');\r\n        }\r\n    };\r\n\r\n    useEffect(() =>\r\n    {\r\n        fetch_data();\r\n    }, []);\r\n\r\n    const fetch_data = async () => {\r\n        let response = await axios.get(window.API_ENDPOINT.GET_CLASS,\r\n            /*{ headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } }*/);\r\n        setClasses(response.data.data);\r\n        return response.data.data;\r\n    };\r\n\r\n    /*const ideas = [\r\n        {key: '1', title: 'Una slide iniziale', description: 'Obiettivo 7'},\r\n        {key: '2', title: 'Una slide iniziale e una finale', description: 'Obiettivo 4'},\r\n        {key: '3', title: 'Una slide al centro', description: 'Obiettivo 4'},\r\n        {key: '4', title: 'Tema libero', description: 'Obiettivo 1'},\r\n    ];\r\n\r\n    const ideas_columns = [\r\n        {title: 'Titolo', dataIndex: 'title', key: 'title'},\r\n        {title: 'Descrizione', dataIndex: 'description', key: 'description'},\r\n    ];*/\r\n\r\n    return (\r\n        <>\r\n            <h1>Le tue classi</h1>\r\n\r\n            <div className='class-container'>\r\n                {classes && classes.map((c, idx) => {\r\n                    return (\r\n                        <div onClick={(e) => select_class(idx)} key={`class_${idx}`} className='class'>\r\n                            {c.class} {c.section} - {c.description}\r\n                            <button onClick={(e) => delete_class(c.id)}>Delete</button>\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            {selectedClass ? (\r\n                <div className='class-detail'>\r\n                    <Tabs tabPosition='top' animated={false}>\r\n\r\n                        <Tabs.TabPane tab={<span><Icon type=\"team\" />Studenti</span>} key=\"1\">\r\n                            <Table style={{backgroundColor:'#ffffff', padding: '16px'}}\r\n                                   dataSource={selectedClass.students}\r\n                                   rowKey='id'\r\n                                   columns={student_columns}\r\n                            />\r\n                        </Tabs.TabPane>\r\n\r\n                        <Tabs.TabPane tab={<span><Icon type=\"highlight\" />Storie</span>} key=\"2\">\r\n                            <Table style={{backgroundColor:'#ffffff', padding: '16px'}}\r\n                                   dataSource={selectedClass.stories}\r\n                                   rowKey='id'\r\n                                   columns={stories_columns}\r\n                            />\r\n                        </Tabs.TabPane>\r\n\r\n                        {/*\r\n                            <Tabs.TabPane tab={<span><Icon type=\"bulb\"/>Idee</span>} key=\"3\">\r\n                                <Table style={{backgroundColor: '#ffffff', padding: '16px'}}\r\n                                       dataSource={ideas}\r\n                                       columns={ideas_columns}\r\n                                />\r\n                            </Tabs.TabPane>\r\n                        */}\r\n\r\n\r\n                    </Tabs>\r\n                </div> ) : null }\r\n\r\n            <Icon theme=\"filled\"\r\n                  style={{fontSize:'64px', position:'absolute', bottom:'64px', right:'64px', cursor: 'pointer'}}\r\n                  type=\"plus-circle\"\r\n                  onClick={() => setAddClassModalVisible(true)}\r\n            />\r\n\r\n            <Modal\r\n                title=\"Aggiungi classe\"\r\n                visible={addClassModalVisible}\r\n                onCancel={() => setAddClassModalVisible(false)}\r\n                okButtonProps={{ style: { display: 'none' } }}\r\n                cancelButtonProps={{ style: { display: 'none' } }}\r\n            >\r\n                <AddClassForm handle_submit={add_class_form_submit} />\r\n            </Modal>\r\n\r\n            <Modal\r\n                title=\"Info Studente\"\r\n                visible={studentDetailModalVisible}\r\n                onCancel={() => setStudentDetailModalVisible(false)}\r\n                okButtonProps={{ style: { display: 'none' } }}\r\n                cancelButtonProps={{ style: { display: 'none' } }}\r\n            >\r\n                {selectedStudent ? (<EditStudentForm handle_submit={edit_user_submit} data={selectedStudent} />) : null}\r\n            </Modal>\r\n        </>\r\n    )\r\n}","import React, {useEffect, useState} from 'react';\r\nimport { Table } from 'antd';\r\nimport axios from \"axios\";\r\n\r\nexport default function Stories()\r\n{\r\n    const [data, setData] = useState(null);\r\n    const [students, setStudents] = useState(null);\r\n\r\n    useEffect(() =>\r\n    {\r\n        fetch_data();\r\n    }, []);\r\n\r\n    const fetch_data = async () => {\r\n        let response = await axios.get(window.API_ENDPOINT.GET_CLASS,\r\n            /*{ headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } }*/);\r\n        let data = [];\r\n        let students = []\r\n\r\n        response.data.data.forEach((cl) => {\r\n            students = [...students, ...cl.students];\r\n            cl.stories.forEach((st) => {\r\n                if(parseInt(st.status) === 1)\r\n                    data.push(st)\r\n            })\r\n        });\r\n\r\n        setStudents(students);\r\n        setData(data);\r\n    };\r\n\r\n    const stories_columns = [\r\n        {title: 'Titolo', dataIndex: 'name', key: 'name'},\r\n        {title: 'Descrizione', dataIndex: 'description', key: 'description'},\r\n        {title: 'Username', key: 'ownerId',\r\n            render: (text, record, index) =>\r\n            {\r\n                let res = students.find(\r\n                    (e) => (e.userId === record.ownerId)\r\n                );\r\n                return `${res.name} ${res.surname} (${res.username})`;\r\n            }\r\n        }\r\n    ];\r\n\r\n    return(\r\n        <>\r\n            <h1>Storie pubblicate</h1>\r\n            <Table style={{backgroundColor:'#ffffff', padding: '16px'}}\r\n                   dataSource={data}\r\n                   columns={stories_columns}\r\n                   rowKey='id'\r\n            />\r\n        </>\r\n    )\r\n}","import React, {useState} from 'react';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport { Layout, Menu, Icon, Avatar } from 'antd';\nimport TeacherClass from './component/teacher-class';\nimport Stories from './component/stories';\n\nconst { Content, Footer, Sider } = Layout;\n\nfunction App()\n{\n    const [collapsed, setCollapsed] = useState(false);\n\n    const onCollapse = collapsed => {\n        setCollapsed( collapsed );\n    };\n\n  return (\n      <>\n          <Router basename={`${window.API_ENDPOINT.SITE_URL}admin-area/`}>\n              <Layout style={{ minHeight: '100vh' }}>\n\n                  <Sider collapsible collapsed={collapsed} onCollapse={onCollapse}>\n\n                      <div style={{ width:'100%', textAlign: 'center', 'padding': '16px' }}>\n                          <div style={{color:'#ffffff', marginBottom: '8px'}}>Salve docente</div>\n                          <Avatar size={64} icon=\"user\" />\n                      </div>\n\n                      <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\n                          <Menu.Item key=\"1\">\n                              <Icon type=\"team\" />\n                              <span>Classi</span>\n                              <Link to=\"/\" />\n                          </Menu.Item>\n                          <Menu.Item key=\"2\">\n                              <Icon type=\"highlight\" />\n                              <span>Storie pubblicate</span>\n                              <Link to=\"/stories\" />\n                          </Menu.Item>\n                      </Menu>\n                  </Sider>\n\n                  <Layout>\n                      <Content style={{ margin: '16px' }}>\n\n                          <Route exact path=\"/\" component={TeacherClass} />\n                          <Route       path=\"/stories\" component={Stories} />\n\n                      </Content>\n                      <Footer style={{ textAlign: 'center' }}>Storylet Admin by ISISLab</Footer>\n                  </Layout>\n\n              </Layout>\n          </Router>\n      </>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}