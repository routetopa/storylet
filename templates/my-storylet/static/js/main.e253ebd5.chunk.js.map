{"version":3,"sources":["components/student-admin-area.js","index.js"],"names":["Content","Layout","Footer","Sider","ReactDOM","render","deleteStorylet","data","a","console","log","axios","delete","window","API_ENDPOINT","CRUD_STORYLET","id","headers","API_NONCE","NONCE","status","fetch_data","useState","studentStory","setStudentStory","studentStoryColumn","title","key","text","record","index","JSON","parse","metadata","name","description","theme","style","fontSize","cursor","marginRight","type","onClick","open","STORYLET_CREATOR","STORYLET_VIEWER","onConfirm","published","color","useEffect","get","GET_MY_STORY","response","minHeight","collapsible","width","textAlign","marginBottom","USER_INFO","surname","size","icon","defaultSelectedKeys","mode","Item","margin","backgroundColor","padding","dataSource","rowKey","columns","document","getElementById"],"mappings":"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","file":"static/js/main.e253ebd5.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { Layout, Menu, Avatar, Icon, Table, Tooltip, Popconfirm, Tag } from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport axios from 'axios';\r\n\r\nconst { Content, Footer, Sider } = Layout;\r\n\r\nexport default function StudentAdminArea()\r\n{\r\n    const deleteStorylet = async (data) =>\r\n    {\r\n        console.log(data);\r\n        let response = await axios.delete(`${window.API_ENDPOINT.CRUD_STORYLET}/${data.id}`,\r\n            { headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } });\r\n        if(response.data.status === 'OK')\r\n        {\r\n            fetch_data();\r\n        }\r\n    };\r\n\r\n    const [studentStory, setStudentStory] = useState([]);\r\n\r\n    const studentStoryColumn = [\r\n        {title: 'Titolo', key: 'name',\r\n            render: (text, record, index) => {\r\n                let metadata = JSON.parse(record.metadata);\r\n                return metadata.name\r\n            }\r\n        },\r\n        {title: 'Descrizione', key: 'description',\r\n            render: (text, record, index) => {\r\n                let metadata = JSON.parse(record.metadata);\r\n                return metadata.description\r\n            }},\r\n        {title: 'Azioni',   key: 'action',\r\n            render: (text, record, index) =>\r\n            {\r\n                return (\r\n                    <div>\r\n                        {(!record.status || record.status === \"0\") ? (\r\n                        <Icon theme=\"filled\"\r\n                              style={{fontSize:'24px', cursor:'pointer', marginRight:'24px'}}\r\n                              type=\"edit\"\r\n                              onClick={() => window.open(`${window.API_ENDPOINT.STORYLET_CREATOR}/${record.id}`,'_blank')}\r\n                        /> ) : null}\r\n                        <Icon theme=\"filled\"\r\n                              style={{fontSize:'24px', cursor:'pointer', marginRight:'24px'}}\r\n                              type=\"play-circle\"\r\n                              onClick={() => window.open(`${window.API_ENDPOINT.STORYLET_VIEWER}/${record.id}`,'_blank')}\r\n                        />\r\n                        {(!record.status || record.status === \"0\") ? (\r\n                        <Popconfirm title=\"Sure to ?\" onConfirm={() => deleteStorylet(record)}>\r\n                            <Icon theme=\"filled\"\r\n                                  style={{fontSize:'24px', cursor:'pointer'}}\r\n                                  type=\"delete\"\r\n                            />\r\n                        </Popconfirm> ) : null}\r\n                    </div>\r\n                )\r\n            }\r\n        },\r\n        {title: 'Stato', key: 'status',\r\n            render: (text, record, index) =>\r\n            {\r\n                let published = (record.status && record.status === \"1\");\r\n\r\n                return (\r\n                    <Tag color={published ? 'green' : 'red'} key={record.status}>\r\n                        {published ? 'Pubblica' : 'Privata'}\r\n                    </Tag>\r\n                )\r\n            }\r\n        },\r\n    ];\r\n\r\n\r\n    useEffect(() =>\r\n    {\r\n        fetch_data();\r\n    }, []);\r\n\r\n    const fetch_data = async () => {\r\n        let response = await axios.get(window.API_ENDPOINT.GET_MY_STORY,\r\n            { headers: { 'X-WP-Nonce': window.API_NONCE.NONCE } });\r\n        setStudentStory(response.data.data);\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Layout style={{ minHeight: '100vh' }}>\r\n\r\n                <Sider collapsible>\r\n\r\n                    <div style={{ width:'100%', textAlign: 'center', 'padding': '16px' }}>\r\n                        <div style={{color:'#ffffff', marginBottom: '8px'}}>Ciao {`${window.USER_INFO.name} ${window.USER_INFO.surname}`}</div>\r\n                        <Avatar size={64} icon=\"user\" />\r\n                    </div>\r\n\r\n                    <Menu theme=\"dark\" defaultSelectedKeys={['1']} mode=\"inline\">\r\n                        <Menu.Item key=\"1\">\r\n                            <Icon type=\"team\" />\r\n                            <span>Le mie storie</span>\r\n                        </Menu.Item>\r\n                    </Menu>\r\n                </Sider>\r\n\r\n                <Layout>\r\n                    <Content style={{ margin: '16px' }}>\r\n                        <Table style={{backgroundColor:'#ffffff', padding: '16px'}}\r\n                               dataSource={studentStory}\r\n                               rowKey='id'\r\n                               columns={studentStoryColumn}\r\n                        />\r\n                    </Content>\r\n                    <Footer style={{ textAlign: 'center' }}>Storylet Admin by ISISLab</Footer>\r\n                </Layout>\r\n\r\n            </Layout>\r\n        </>\r\n    )\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport StudentAdminArea from './components/student-admin-area';\n\nReactDOM.render(<StudentAdminArea />, document.getElementById('root'));\n"],"sourceRoot":""}